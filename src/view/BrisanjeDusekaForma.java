/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import domen.Dusek;
import domen.Materijal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import logika.KontrolerK;
import modeli.ModelTabeleDusek;

/**
 *
 * @author Master
 */
public class BrisanjeDusekaForma extends javax.swing.JDialog {

    KlijentForma forma;
    Dusek ucitani;
    boolean signal = false;
    /**
     * Creates new form BrisanjeDusekaForma
     */
    public BrisanjeDusekaForma(KlijentForma forma) {
        initComponents();
        this.forma = forma;
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPretraga = new javax.swing.JTextField();
        cbKriterijum = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnPretraga = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabela = new javax.swing.JTable();
        btnUcitaj = new javax.swing.JButton();
        lblUcitaniDusek = new javax.swing.JLabel();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbKriterijum.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Kriterijum:");

        btnPretraga.setText("Pretrazi");
        btnPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretragaActionPerformed(evt);
            }
        });

        tblTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DusekID", "Naziv Duseka", "Cena", "Materijal", "Tvrdoca"
            }
        ));
        jScrollPane1.setViewportView(tblTabela);

        btnUcitaj.setText("Ucitaj");
        btnUcitaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUcitajActionPerformed(evt);
            }
        });

        lblUcitaniDusek.setText("  ");

        btnObrisi.setText("Obrisi ucitani dusek");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnPretraga)))
                        .addGap(0, 101, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblUcitaniDusek)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisi)
                        .addGap(18, 18, 18)
                        .addComponent(btnUcitaj)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraga))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUcitaj)
                    .addComponent(lblUcitaniDusek)
                    .addComponent(btnObrisi))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretragaActionPerformed
        switch (cbKriterijum.getSelectedIndex()) {
            case 0:
                pretraziMaterijal();
                break;
            case 1:
                pretraziTvrdoca();
                break;
            default:
                pretraziNaziv();
        }
    }//GEN-LAST:event_btnPretragaActionPerformed

    private void btnUcitajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUcitajActionPerformed
        ModelTabeleDusek mtd = (ModelTabeleDusek) tblTabela.getModel();
        if (tblTabela.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Sisem ne moze da ucita dusek po zadatoj vrednisti");
            return;
        }
        ucitani = mtd.vrati(tblTabela.getSelectedRow());
        if (ucitani == null) {
            JOptionPane.showMessageDialog(this, "Sisem ne moze da ucita dusek po zadatoj vrednisti");
            return;
        }
        System.out.println(ucitani);
        JOptionPane.showMessageDialog(this, "Sisem je ucitao dusek po zadatoj vrednosti");
        signal = true;
        lblUcitaniDusek.setText(ucitani + "");
    }//GEN-LAST:event_btnUcitajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        if (ucitani == null || signal == false) {
            System.out.println("OVde 1");
            JOptionPane.showMessageDialog(this, "Sisem ne moze da obrise dusek");
            return;
        }
        int id = ucitani.getDusekID();
        boolean signalS = KontrolerK.getInstance().brisanjeDuseka(id);
        if (signalS) {
            JOptionPane.showMessageDialog(this, "Sistem je obrisao dusek");
            this.signal = false;
            btnPretraga.doClick();
        } else {
            System.out.println("OVde 2");
            JOptionPane.showMessageDialog(this, "Sisem ne moze da obrise dusek");
            return;
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BrisanjeDusekaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BrisanjeDusekaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BrisanjeDusekaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BrisanjeDusekaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                BrisanjeDusekaForma dialog = new BrisanjeDusekaForma(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JButton btnUcitaj;
    private javax.swing.JComboBox cbKriterijum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblUcitaniDusek;
    private javax.swing.JTable tblTabela;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables
private void srediFormu() {
        ModelTabeleDusek mtd = new ModelTabeleDusek();
        tblTabela.setModel(mtd);
        cbKriterijum.removeAllItems();
        cbKriterijum.addItem("Materijal");
        cbKriterijum.addItem("Tvrdoca");
        cbKriterijum.addItem("Naziv");
    }

    private void pretraziMaterijal() {
        String materijal = txtPretraga.getText();
        ArrayList<Dusek> lista = KontrolerK.getInstance().vratiDuseke();
        ArrayList<Materijal> listaM = KontrolerK.getInstance().vratiMaterijale();
        int matID = -1;
        for (Materijal m : listaM) {
            if (m.getNazivMaterijala().equals(materijal)) {
                matID = m.getMaterijalID();
            }
        }

        ArrayList<Dusek> listaKonacana = new ArrayList<>();

        for (Dusek d : lista) {
            if (matID != -1 && d.getMaterijal() == matID) {
                listaKonacana.add(d);
            }
        }
        if (listaKonacana.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje dusek po zadatoj vrednost");
            return;
        }
        ModelTabeleDusek mtk = (ModelTabeleDusek) tblTabela.getModel();
        mtk.setLista(listaKonacana);
        JOptionPane.showMessageDialog(this, "Sistem je nasao listu duseka po zadatoj vrednosti");
    }

    private void pretraziTvrdoca() {
        String tvrdoca = txtPretraga.getText();
        ArrayList<Dusek> lista = KontrolerK.getInstance().vratiDuseke();
        int tvID = -1;
        switch (tvrdoca) {
            case "Mek":
                tvID = 1;
                break;
            case "Srednji":
                tvID = 2;
                break;
            case "Tvrd":
                tvID = 3;
                break;
            default:
                tvID = -1;
                break;
        }

        ArrayList<Dusek> listaKonacana = new ArrayList<>();

        for (Dusek d : lista) {
            if (tvID != -1 && d.getTvrdoca() == tvID) {
                listaKonacana.add(d);
            }
        }
        if (listaKonacana.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje dusek po zadatoj vrednost");
            return;
        }
        ModelTabeleDusek mtk = (ModelTabeleDusek) tblTabela.getModel();
        mtk.setLista(listaKonacana);
        JOptionPane.showMessageDialog(this, "Sistem je nasao listu duseka po zadatoj vrednosti");
    }

    private void pretraziNaziv() {
        String naziv = txtPretraga.getText();
        ArrayList<Dusek> lista = KontrolerK.getInstance().vratiDuseke();
        ArrayList<Dusek> listaKonacana = new ArrayList<>();
        for (Dusek dusek : lista) {
            if (dusek.getNazivDuseka().contains(naziv)) {
                listaKonacana.add(dusek);
            }
        }
        if (listaKonacana.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje dusek po zadatoj vrednost");
            return;
        }
        ModelTabeleDusek mtk = (ModelTabeleDusek) tblTabela.getModel();
        mtk.setLista(listaKonacana);
        JOptionPane.showMessageDialog(this, "Sistem je nasao listu duseka po zadatoj vrednosti");
    }
}
